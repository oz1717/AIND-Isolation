{
    "critiques": {
        "680": {
            "rubric_items": {
                "5510": {
                    "result": "failed",
                    "observation": "{\n    \"4. Test that MinimaxPlayer successfully plays a full game\": {\n        \"traceback\": \"Traceback (most recent call last):\\nAttributeError: 'Board' object has no attribute 'get_legal_move'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\\nException: 'Board' object has no attribute 'get_legal_move'\\n\"\n    }, \n    \"13. Test output interface of custom_score_3()\": {\n        \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_sidzumgj/workspace/game_agent.py\\\", line 97, in custom_score_3\\n    raise NotImplementedError\\nNotImplementedError\\n\"\n    }, \n    \"8. Test that alphabeta() raises SearchTimeout when the timer expires\": {\n        \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_sidzumgj/workspace/game_agent.py\\\", line 365, in alphabeta\\n    raise NotImplementedError\\nNotImplementedError\\n\"\n    }, \n    \"10. Test that AlphaBetaPlayer successfully plays a full game\": {\n        \"traceback\": \"Traceback (most recent call last):\\nNotImplementedError\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\\nException: \\n\"\n    }, \n    \"14. Submission includes heuristic_analysis.pdf\": {\n        \"traceback\": \"AssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.\\n\"\n    }, \n    \"6. Test the interface of AlphaBetaPlayer.get_move()\": {\n        \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_sidzumgj/workspace/game_agent.py\\\", line 314, in get_move\\n    raise NotImplementedError\\nNotImplementedError\\n\"\n    }, \n    \"1. Test output interface of MinimaxPlayer.minimax()\": {\n        \"traceback\": \"Traceback (most recent call last):\\nAttributeError: 'Board' object has no attribute 'get_legal_move'\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nAssertionError: The MinimaxPlayer object had no minimax() method.\\n\"\n    }, \n    \"5. Test interface of AlphaBetaPlayer.alphabeta()\": {\n        \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_sidzumgj/workspace/game_agent.py\\\", line 365, in alphabeta\\n    raise NotImplementedError\\nNotImplementedError\\n\"\n    }, \n    \"2. Test functionality of MinimaxPlayer.minimax()\": {\n        \"traceback\": \"AssertionError: False is not true : Your MinimaxAgent.minimax function did not visit every node in the game tree as player 1.  First check for off-by-one errors in your handling of the depth limiting. Then, especially if the number of nodes explored by your agent is too low, check everywhere you call to game.get_legal_moves() to make sure you are getting the legal moves for the appropriate player at each level of the game tree.  Finally, you may be using non-standard search optimizations that are not supported by the test cases.  The range of expansions accepted will vary slightly within the range indicated based on your termination condition.\\n\\nExpected number of visited nodes -- min: 5 max: 5\\nNumber of nodes your agent explored: 1\\n\\nTest Case Details:\\n------------------\\nHeuristic: open_move_score\\nDepth limit: 1\\nInitial Board State:\\n     0   1   2   3   4   5   6   7   8\\n\\r0  |   |   |   |   |   |   |   |   |   | \\n\\r1  |   |   |   |   |   |   |   |   |   | \\n\\r2  |   |   | - | - | - | - |   |   |   | \\n\\r3  |   | 2 |   | - | - |   | - |   |   | \\n\\r4  |   |   | - | - | - | - | 1 |   |   | \\n\\r5  |   |   |   |   | - |   | - |   |   | \\n\\r6  |   |   | - |   |   |   |   |   |   | \\n\\r7  |   |   |   |   |   |   |   |   |   | \\n\\r8  |   |   |   |   |   |   |   |   |   | \\n\\r\\ngame._board_state:\\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 58]\\n\\n\"\n    }, \n    \"9. Test iterative deepening in AlphaBetaPlayer.get_move()\": {\n        \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_sidzumgj/workspace/game_agent.py\\\", line 314, in get_move\\n    raise NotImplementedError\\nNotImplementedError\\n\"\n    }, \n    \"7. Test functionality of AlphaBetaPlayer.alphabeta()\": {\n        \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_sidzumgj/workspace/game_agent.py\\\", line 365, in alphabeta\\n    raise NotImplementedError\\nNotImplementedError\\n\"\n    }, \n    \"15. Submission includes research_review.pdf\": {\n        \"traceback\": \"AssertionError: False is not true : You must submit a report named research_review.pdf for review.\\n\"\n    }, \n    \"12. Test output interface of custom_score_2()\": {\n        \"traceback\": \"Traceback (most recent call last):\\n  File \\\"/home/vmuser_sidzumgj/workspace/game_agent.py\\\", line 71, in custom_score_2\\n    raise NotImplementedError\\nNotImplementedError\\n\"\n    }\n}"
                }
            }
        }
    }
}